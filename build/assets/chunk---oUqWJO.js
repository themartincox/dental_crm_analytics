import{r as t}from"./chunk-BWavu6B_.js";import{s as e,u as n}from"./chunk-dJ4gLY84.js";const l=(t,e)=>{throw t},i=()=>{var t,n,l;return null==(l=null==(n=null==(t=e)?void 0:t.auth)?void 0:n.getUser())?void 0:l.then((({data:{user:t}})=>{if(!t)throw new Error("User not authenticated");return t}))},a={async ensureUserProfile(t,n={}){var i,a;try{let l=0;const d=3;for(;l<d;)try{const{data:o,error:d}=await(null==(i=e)?void 0:i.rpc("ensure_user_profile",{user_id:t,user_email:null==n?void 0:n.email,user_full_name:(null==n?void 0:n.fullName)||(null==n?void 0:n.full_name),user_role:(null==n?void 0:n.role)||"receptionist"}));if(d){if("42P17"===(null==d?void 0:d.code)||(null==(a=null==d?void 0:d.message)?void 0:a.includes("infinite recursion"))){l++,await new Promise((t=>setTimeout(t,1e3*l)));continue}throw d}return o}catch(o){if(l===d-1)throw o;l++}}catch(d){l(d)}},async updateUserProfile(t,n){var a,o,d,r,u;try{await i();const{data:l,error:s}=await(null==(u=null==(r=null==(d=null==(a=e)?void 0:a.from("user_profiles"))?void 0:d.upsert({id:t,...n,updated_at:null==(o=new Date)?void 0:o.toISOString()},{onConflict:"id",ignoreDuplicates:!1}))?void 0:r.select())?void 0:u.maybeSingle());if(s){if("42P17"===(null==s?void 0:s.code))throw new Error("Profile update blocked by security policy. Please try again.");throw s}return l}catch(s){l(s)}},async getUserProfile(t){var n,i,a,o;try{const l=await this.ensureUserProfile(t);if(l)return l;const{data:d,error:r}=await(null==(o=null==(a=null==(i=null==(n=e)?void 0:n.from("user_profiles"))?void 0:i.select("*"))?void 0:a.eq("id",t))?void 0:o.maybeSingle());if(r&&"42P17"===(null==r?void 0:r.code))throw new Error("Unable to fetch profile due to security policy recursion");if(r)throw r;return d}catch(d){l(d)}},async cleanupProfiles(){var t;try{const{data:n,error:l}=await(null==(t=e)?void 0:t.rpc("cleanup_duplicate_profiles"));if(l)throw l;return{cleanedCount:n}}catch(n){l(n)}}},o={async getPatients(t={}){var n,i;try{let l=null==(i=null==(n=e)?void 0:n.from("patients"))?void 0:i.select("\n          *,\n          assigned_dentist:user_profiles!assigned_dentist_id(id, full_name, email),\n          practice_location:practice_locations(id, name)\n        ");if((null==t?void 0:t.status)&&"all"!==(null==t?void 0:t.status)&&(l=null==l?void 0:l.eq("patient_status",null==t?void 0:t.status)),(null==t?void 0:t.treatmentType)&&"all"!==(null==t?void 0:t.treatmentType)&&(l=null==l?void 0:l.eq("treatment_type",null==t?void 0:t.treatmentType)),(null==t?void 0:t.insuranceProvider)&&"all"!==(null==t?void 0:t.insuranceProvider)&&(l=null==l?void 0:l.eq("insurance_provider",null==t?void 0:t.insuranceProvider)),(null==t?void 0:t.search)&&(l=null==l?void 0:l.or(`first_name.ilike.%${null==t?void 0:t.search}%,last_name.ilike.%${null==t?void 0:t.search}%,email.ilike.%${null==t?void 0:t.search}%,phone.ilike.%${null==t?void 0:t.search}%`)),null==t?void 0:t.sortBy){const e="desc"!==(null==t?void 0:t.sortDirection);l=null==l?void 0:l.order(null==t?void 0:t.sortBy,{ascending:e})}else l=null==l?void 0:l.order("created_at",{ascending:!1});const{data:a,error:o}=await l;if(o)throw o;return(null==a?void 0:a.map((t=>{var e,n,l,i;return{id:null==t?void 0:t.id,name:`${null==t?void 0:t.first_name} ${null==t?void 0:t.last_name}`,email:null==t?void 0:t.email,phone:null==t?void 0:t.phone,dateOfBirth:null==t?void 0:t.date_of_birth,lastVisit:null==(n=null==(e=null==t?void 0:t.updated_at)?void 0:e.split("T"))?void 0:n[0],nextAppointment:null,status:null==t?void 0:t.patient_status,treatmentType:null==t?void 0:t.treatment_type,insuranceProvider:null==t?void 0:t.insurance_provider,outstandingBalance:0,profileImage:null==t?void 0:t.profile_image_url,progress:75,notes:null==t?void 0:t.notes,communicationPreference:null==t?void 0:t.communication_preference,assignedDentist:null==(l=null==t?void 0:t.assigned_dentist)?void 0:l.full_name,practiceLocation:null==(i=null==t?void 0:t.practice_location)?void 0:i.name}})))||[]}catch(a){l(a)}},async getPatientById(t){var n,i,a,o;try{const{data:l,error:d}=await(null==(o=null==(a=null==(i=null==(n=e)?void 0:n.from("patients"))?void 0:i.select("\n          *,\n          assigned_dentist:user_profiles!assigned_dentist_id(id, full_name, email),\n          practice_location:practice_locations(id, name),\n          appointments(id, appointment_date, start_time, status, treatment_type),\n          treatments(id, procedure_name, status, estimated_cost, actual_cost)\n        "))?void 0:a.eq("id",t))?void 0:o.single());if(d)throw d;return l}catch(d){l(d)}},async createPatient(t){var n,a,o,d;try{i();const{data:l,error:r}=await(null==(d=null==(o=null==(a=null==(n=e)?void 0:n.from("patients"))?void 0:a.insert({patient_number:`P${Date.now()}`,first_name:null==t?void 0:t.firstName,last_name:null==t?void 0:t.lastName,email:null==t?void 0:t.email,phone:null==t?void 0:t.phone,date_of_birth:null==t?void 0:t.dateOfBirth,address:null==t?void 0:t.address,postcode:null==t?void 0:t.postcode,patient_status:(null==t?void 0:t.status)||"prospective",treatment_type:(null==t?void 0:t.treatmentType)||"general",insurance_provider:(null==t?void 0:t.insuranceProvider)||"NHS",communication_preference:(null==t?void 0:t.communicationPreference)||"email",notes:null==t?void 0:t.notes,practice_location_id:null==t?void 0:t.practiceLocationId,assigned_dentist_id:null==t?void 0:t.assignedDentistId}))?void 0:o.select())?void 0:d.single());if(r)throw r;return await this.logActivity({activity_type:"patient_registration",description:`New patient registered: ${null==t?void 0:t.firstName} ${null==t?void 0:t.lastName}`,patient_id:null==l?void 0:l.id}),l}catch(r){l(r)}},async updatePatient(t,n){var a,o,d,r,u;try{i();const{data:l,error:s}=await(null==(u=null==(r=null==(d=null==(o=null==(a=e)?void 0:a.from("patients"))?void 0:o.update({first_name:null==n?void 0:n.firstName,last_name:null==n?void 0:n.lastName,email:null==n?void 0:n.email,phone:null==n?void 0:n.phone,date_of_birth:null==n?void 0:n.dateOfBirth,address:null==n?void 0:n.address,postcode:null==n?void 0:n.postcode,patient_status:null==n?void 0:n.status,treatment_type:null==n?void 0:n.treatmentType,insurance_provider:null==n?void 0:n.insuranceProvider,communication_preference:null==n?void 0:n.communicationPreference,notes:null==n?void 0:n.notes,assigned_dentist_id:null==n?void 0:n.assignedDentistId}))?void 0:d.eq("id",t))?void 0:r.select())?void 0:u.single());if(s)throw s;return l}catch(s){l(s)}},async getPatientStats(){var t;try{const{data:n,error:l}=await(null==(t=e)?void 0:t.rpc("get_practice_stats"));if(l)throw l;return(null==n?void 0:n[0])||{}}catch(n){l(n)}}},d={async getAppointments(t={}){var n,i,a;try{let l=null==(i=null==(n=e)?void 0:n.from("appointments"))?void 0:i.select("\n          *,\n          patient:patients(id, first_name, last_name, phone, email),\n          dentist:user_profiles!dentist_id(id, full_name),\n          practice_location:practice_locations(id, name)\n        ");(null==t?void 0:t.date)&&(l=null==l?void 0:l.eq("appointment_date",null==t?void 0:t.date)),(null==t?void 0:t.status)&&(l=null==l?void 0:l.eq("status",null==t?void 0:t.status)),(null==t?void 0:t.dentistId)&&(l=null==l?void 0:l.eq("dentist_id",null==t?void 0:t.dentistId));const{data:o,error:d}=await(null==(a=null==l?void 0:l.order("appointment_date"))?void 0:a.order("start_time"));if(d)throw d;return(null==o?void 0:o.map((t=>{var e,n,l,i,a,o,d,r;return{id:null==t?void 0:t.id,appointmentNumber:null==t?void 0:t.appointment_number,patient:{id:null==(e=null==t?void 0:t.patient)?void 0:e.id,name:`${null==(n=null==t?void 0:t.patient)?void 0:n.first_name} ${null==(l=null==t?void 0:t.patient)?void 0:l.last_name}`,phone:null==(i=null==t?void 0:t.patient)?void 0:i.phone,email:null==(a=null==t?void 0:t.patient)?void 0:a.email},dentist:{id:null==(o=null==t?void 0:t.dentist)?void 0:o.id,name:null==(d=null==t?void 0:t.dentist)?void 0:d.full_name},date:null==t?void 0:t.appointment_date,startTime:null==t?void 0:t.start_time,endTime:null==t?void 0:t.end_time,treatmentType:null==t?void 0:t.treatment_type,status:null==t?void 0:t.status,notes:null==t?void 0:t.notes,estimatedCost:null==t?void 0:t.estimated_cost,depositRequired:null==t?void 0:t.deposit_required,depositPaid:null==t?void 0:t.deposit_paid,practiceLocation:null==(r=null==t?void 0:t.practice_location)?void 0:r.name}})))||[]}catch(o){l(o)}},async createAppointment(t){var n,a,o,d;try{i();const{data:l,error:r}=await(null==(d=null==(o=null==(a=null==(n=e)?void 0:n.from("appointments"))?void 0:a.insert({appointment_number:`A${Date.now()}`,patient_id:null==t?void 0:t.patientId,dentist_id:null==t?void 0:t.dentistId,practice_location_id:null==t?void 0:t.practiceLocationId,appointment_date:null==t?void 0:t.date,start_time:null==t?void 0:t.startTime,end_time:null==t?void 0:t.endTime,treatment_type:null==t?void 0:t.treatmentType,status:"scheduled",notes:null==t?void 0:t.notes,estimated_cost:null==t?void 0:t.estimatedCost,deposit_required:(null==t?void 0:t.depositRequired)||0}))?void 0:o.select())?void 0:d.single());if(r)throw r;return await this.logActivity({activity_type:"appointment_booking",description:"New appointment booked",patient_id:null==t?void 0:t.patientId,appointment_id:null==l?void 0:l.id}),l}catch(r){l(r)}},async updateAppointmentStatus(t,n,a=null){var o,d,r,u,s;try{i();const{data:l,error:v}=await(null==(s=null==(u=null==(r=null==(d=null==(o=e)?void 0:o.from("appointments"))?void 0:d.update({status:n,notes:a||void 0}))?void 0:r.eq("id",t))?void 0:u.select())?void 0:s.single());if(v)throw v;return l}catch(v){l(v)}}},r={async getLeads(t={}){var n,i;try{let l=null==(i=null==(n=e)?void 0:n.from("leads"))?void 0:i.select("\n          *,\n          assigned_to:user_profiles!assigned_to_id(id, full_name),\n          practice_location:practice_locations(id, name)\n        ");(null==t?void 0:t.status)&&"all"!==(null==t?void 0:t.status)&&(l=null==l?void 0:l.eq("lead_status",null==t?void 0:t.status)),(null==t?void 0:t.source)&&"all"!==(null==t?void 0:t.source)&&(l=null==l?void 0:l.eq("lead_source",null==t?void 0:t.source)),(null==t?void 0:t.assignedTo)&&(l=null==l?void 0:l.eq("assigned_to_id",null==t?void 0:t.assignedTo));const{data:a,error:o}=await(null==l?void 0:l.order("created_at",{ascending:!1}));if(o)throw o;return a||[]}catch(a){l(a)}},async createLead(t){var n,a,o,d;try{i();const{data:l,error:r}=await(null==(d=null==(o=null==(a=null==(n=e)?void 0:n.from("leads"))?void 0:a.insert({lead_number:`L${Date.now()}`,first_name:null==t?void 0:t.firstName,last_name:null==t?void 0:t.lastName,email:null==t?void 0:t.email,phone:null==t?void 0:t.phone,postcode:null==t?void 0:t.postcode,lead_source:null==t?void 0:t.source,lead_status:"new",treatment_interest:null==t?void 0:t.treatmentInterest,estimated_value:null==t?void 0:t.estimatedValue,notes:null==t?void 0:t.notes,assigned_to_id:null==t?void 0:t.assignedToId,practice_location_id:null==t?void 0:t.practiceLocationId}))?void 0:o.select())?void 0:d.single());if(r)throw r;return l}catch(r){l(r)}},async convertLeadToPatient(t,n){var a,d,r,u;try{i();const l=await(null==o?void 0:o.createPatient(n)),{error:s}=await(null==(u=null==(r=null==(a=e)?void 0:a.from("leads"))?void 0:r.update({lead_status:"converted",conversion_date:null==(d=new Date)?void 0:d.toISOString(),converted_patient_id:null==l?void 0:l.id}))?void 0:u.eq("id",t));if(s)throw s;return await this.logActivity({activity_type:"lead_conversion",description:`Lead converted to patient: ${null==n?void 0:n.firstName} ${null==n?void 0:n.lastName}`,patient_id:null==l?void 0:l.id}),l}catch(s){l(s)}}},u={userProfile:a,patient:o,appointment:d,lead:r,analytics:{async getPracticeStats(){var t;try{const{data:n,error:l}=await(null==(t=e)?void 0:t.rpc("get_practice_stats"));if(l)throw l;const i=(null==n?void 0:n[0])||{};return{totalPatients:(null==i?void 0:i.total_patients)||0,activePatients:(null==i?void 0:i.active_patients)||0,totalRevenue:(null==i?void 0:i.total_revenue)||0,monthlyRevenue:(null==i?void 0:i.monthly_revenue)||0,avgPatientValue:(null==i?void 0:i.avg_patient_value)||0,conversionRate:(null==i?void 0:i.conversion_rate)||0}}catch(n){l(n)}},async getRevenueData(t=30){var n,i,a,o,d,r,u;try{const{data:l,error:s}=await(null==(u=null==(r=null==(i=null==(n=e)?void 0:n.from("revenue_records"))?void 0:i.select("*"))?void 0:r.gte("record_date",null==(d=null==(o=null==(a=new Date(Date.now()-24*t*60*60*1e3))?void 0:a.toISOString())?void 0:o.split("T"))?void 0:d[0]))?void 0:u.order("record_date"));if(s)throw s;return(null==l?void 0:l.map((t=>({date:null==t?void 0:t.record_date,revenue:null==t?void 0:t.revenue_amount,patients:null==t?void 0:t.patient_count,appointments:null==t?void 0:t.appointment_count,newPatients:null==t?void 0:t.new_patient_count,treatmentType:null==t?void 0:t.treatment_type}))))||[]}catch(s){l(s)}},async getLeadPipelineData(){var t,n,i,a,o,d,r,u,s,v,c,p,m,_;try{const{data:l,error:f}=await(null==(n=null==(t=e)?void 0:t.from("leads"))?void 0:n.select("lead_status, estimated_value"));if(f)throw f;const y={};null==l||l.forEach((t=>{(null==y?void 0:y[null==t?void 0:t.lead_status])||(y[null==t?void 0:t.lead_status]={count:0,value:0}),y[null==t?void 0:t.lead_status].count++,y[null==t?void 0:t.lead_status].value+=parseFloat((null==t?void 0:t.estimated_value)||0)}));return[{name:"New",count:(null==(i=null==y?void 0:y.new)?void 0:i.count)||0,value:(null==(a=null==y?void 0:y.new)?void 0:a.value)||0},{name:"Contacted",count:(null==(o=null==y?void 0:y.contacted)?void 0:o.count)||0,value:(null==(d=null==y?void 0:y.contacted)?void 0:d.value)||0},{name:"Qualified",count:(null==(r=null==y?void 0:y.qualified)?void 0:r.count)||0,value:(null==(u=null==y?void 0:y.qualified)?void 0:u.value)||0},{name:"Consultation",count:(null==(s=null==y?void 0:y.consultation_booked)?void 0:s.count)||0,value:(null==(v=null==y?void 0:y.consultation_booked)?void 0:v.value)||0},{name:"Treatment",count:(null==(c=null==y?void 0:y.treatment_planned)?void 0:c.count)||0,value:(null==(p=null==y?void 0:y.treatment_planned)?void 0:p.value)||0},{name:"Converted",count:(null==(m=null==y?void 0:y.converted)?void 0:m.count)||0,value:(null==(_=null==y?void 0:y.converted)?void 0:_.value)||0}]}catch(f){l(f)}},async getRecentActivities(t=10){var n,i,a,o;try{const{data:l,error:d}=await(null==(o=null==(a=null==(i=null==(n=e)?void 0:n.from("system_activities"))?void 0:i.select("\n          *,\n          patient:patients(first_name, last_name),\n          user:user_profiles!user_id(full_name)\n        "))?void 0:a.order("created_at",{ascending:!1}))?void 0:o.limit(t));if(d)throw d;return(null==l?void 0:l.map((t=>{var e,n,l;return{id:null==t?void 0:t.id,type:null==t?void 0:t.activity_type,description:null==t?void 0:t.description,patientName:(null==t?void 0:t.patient)?`${null==(e=null==t?void 0:t.patient)?void 0:e.first_name} ${null==(n=null==t?void 0:t.patient)?void 0:n.last_name}`:null,userName:null==(l=null==t?void 0:t.user)?void 0:l.full_name,timestamp:new Date(null==t?void 0:t.created_at),metadata:null==t?void 0:t.metadata}})))||[]}catch(d){l(d)}}},common:{async logActivity(t){var n,l,i,a;try{const o=null==(l=null==(n=e)?void 0:n.auth)?void 0:l.user,{error:d}=await(null==(a=null==(i=e)?void 0:i.from("system_activities"))?void 0:a.insert({activity_type:null==t?void 0:t.activity_type,description:null==t?void 0:t.description,patient_id:(null==t?void 0:t.patient_id)||null,user_id:(null==o?void 0:o.id)||null,appointment_id:(null==t?void 0:t.appointment_id)||null,treatment_id:(null==t?void 0:t.treatment_id)||null,metadata:(null==t?void 0:t.metadata)||null}));if(d)throw d}catch(o){}},async getPracticeLocations(){var t,n,i,a;try{const{data:l,error:o}=await(null==(a=null==(i=null==(n=null==(t=e)?void 0:t.from("practice_locations"))?void 0:n.select("*"))?void 0:i.eq("is_active",!0))?void 0:a.order("name"));if(o)throw o;return l||[]}catch(o){l(o)}},async getStaffMembers(){var t,n,i,a;try{const{data:l,error:o}=await(null==(a=null==(i=null==(n=null==(t=e)?void 0:t.from("user_profiles"))?void 0:n.select("id, full_name, email, role"))?void 0:i.eq("is_active",!0))?void 0:a.order("full_name"));if(o)throw o;return l||[]}catch(o){l(o)}}}},s=(e,l=[],i={})=>{const[a,o]=t.useState((null==i?void 0:i.initialData)||null),[d,r]=t.useState(!0),[u,s]=t.useState(null),{user:v}=n(),c=t.useCallback((async()=>{if(v||!1===(null==i?void 0:i.requireAuth))try{r(!0),s(null);const t=await e(...l);o(t)}catch(t){s(t),(null==i?void 0:i.onError)&&(null==i||i.onError(t))}finally{r(!1)}else r(!1)}),[e,v,...l]);t.useEffect((()=>{c()}),[c]);return{data:a,loading:d,error:u,refetch:t.useCallback((()=>{c()}),[c])}},v=(t={})=>{var e;return s(null==(e=null==u?void 0:u.patient)?void 0:e.getPatients,[t],{initialData:[]})},c=()=>{var t;return s(null==(t=null==u?void 0:u.patient)?void 0:t.getPatientStats,[],{initialData:{}})},p=()=>{var t;return s(null==(t=null==u?void 0:u.analytics)?void 0:t.getPracticeStats,[],{initialData:{}})},m=(t=30)=>{var e;return s(null==(e=null==u?void 0:u.analytics)?void 0:e.getRevenueData,[t],{initialData:[]})},_=()=>{var t;return s(null==(t=null==u?void 0:u.analytics)?void 0:t.getLeadPipelineData,[],{initialData:[]})},f=(t=10)=>{var e;return s(null==(e=null==u?void 0:u.analytics)?void 0:e.getRecentActivities,[t],{initialData:[]})};export{m as a,_ as b,f as c,v as d,c as e,p as u};
